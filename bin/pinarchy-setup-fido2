#!/bin/bash

set -e

# FIDO2 Management Script for PinArchy  
# Enhanced FIDO2/YubiKey configuration with multiple options

main_menu() {
  while true; do
    clear
    omarchy-show-logo
    echo "üîê PinArchy FIDO2 Management"
    echo

    # Define available FIDO2 components
    COMPONENTS=(
      "sudo"
      "login"
      "ssh"
      "luks"
      "security"
      "Exit"
    )

    # Use gum for consistent multi-select interface
    SELECTED_STRING=$(gum choose --no-limit --header "Select FIDO2 components to configure..." --selected-prefix="‚úó " --selected="Exit" "${COMPONENTS[@]}") #TODO  --selected-prefix="‚òë " --unselected-prefix="‚òê "

    # Convert newline-separated string to array
    SELECTED=()
    while IFS= read -r line; do
      [[ -n "$line" ]] && SELECTED+=("$line")
    done <<< "$SELECTED_STRING"

    if [[ ${#SELECTED[@]} -eq 0 ]]; then
      echo "No components selected. Exiting."
      exit 0
    fi

    # Check if only Exit was selected (and nothing else)
    if [[ ${#SELECTED[@]} -eq 1 && "${SELECTED[0]}" == "Exit" ]]; then
      echo "üëã Goodbye!"
      exit 0
    fi

    # Remove Exit from selected components if other components were also selected
    FILTERED_SELECTED=()
    for component in "${SELECTED[@]}"; do
      if [[ "$component" != "Exit" ]]; then
        FILTERED_SELECTED+=("$component")
      fi
    done
    SELECTED=("${FILTERED_SELECTED[@]}")

    # Skip authentication options prompt for security-only setup
    if [[ ${#SELECTED[@]} -eq 1 && "${SELECTED[0]}" == "security" ]]; then
      OPTIONS=()
    else
      echo
      echo "Authentication options:"

      # Separate checkboxes for authentication requirements
      OPTIONS_STRING=$(gum choose --no-limit --header "Select authentication requirements..." --selected-prefix="‚úì " "touch-required" "pin-required")

      # Convert options to array
      OPTIONS=()
      while IFS= read -r line; do
        [[ -n "$line" ]] && OPTIONS+=("$line")
      done <<< "$OPTIONS_STRING"
    fi

    echo
    echo "Selected components:"
    for component in "${SELECTED[@]}"; do
      case "$component" in
        "sudo") echo "  üîê sudo - Administrative authentication (sudo + GUI admin)" ;;
        "login") echo "  üîë login - Console/system login authentication" ;;
        "ssh") echo "  üîó ssh - Hardware-backed SSH keys" ;;
        "luks") echo "  üíæ luks - Disk encryption with FIDO2" ;;
        "security") echo "  üîí security - Register key for automated lock/shutdown" ;;
        "Exit") ;; # Skip showing Exit in the list
      esac
    done

    # Skip authentication requirements for security-only setup
    if [[ ${#SELECTED[@]} -eq 1 && "${SELECTED[0]}" == "security" ]]; then
      :
    else
      echo
      echo "Authentication requirements:"
      for option in "${OPTIONS[@]}"; do
        case "$option" in
          "touch-required") echo "  üëÜ touch-required - Physical touch needed for authentication" ;;
          "pin-required") echo "  üî¢ pin-required - PIN entry required for authentication" ;;
        esac
      done

      if [[ ${#OPTIONS[@]} -eq 0 ]]; then
        echo "  ‚ö° No additional requirements - Presence-only authentication"
      fi
    fi

    echo

    # Source component functions
    source "$(dirname "$0")/pinarchy-lib/fn-setup-fido2-sudo"
    source "$(dirname "$0")/pinarchy-lib/fn-setup-fido2-login"
    source "$(dirname "$0")/pinarchy-lib/fn-setup-fido2-ssh"
    source "$(dirname "$0")/pinarchy-lib/fn-setup-fido2-luks"
    source "$(dirname "$0")/pinarchy-security-fido2"

    # Process selected components
    process_sudo_component
    process_login_component
    process_ssh_component
    process_luks_component

    # Process security component
    if [[ " ${SELECTED[@]} " =~ " security " ]]; then
      echo "üîí Adding security key..."
      echo
      create_config_dir
      add_fido2_key
    fi

    echo
    echo "‚úÖ Configuration completed!"
    echo "Press any key to return to menu..."
    read -n 1 -s
  done
}

# Run main menu only when script is executed directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
  main_menu
fi